version: "3.8"

services:
  frontend-dev:
    container_name: frontend-dev
    build:
      context: ./psifos-frontend
      dockerfile: Dockerfile.dev
    environment:
      - WATCHPACK_POLLING=true
    command: npm start
    volumes:
      - ./psifos-frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    stdin_open: true

  mdb:
    container_name: mdb
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=${DATABASE_PASS}
      - MARIADB_DATABASE=${DATABASE_NAME}
      - MARIADB_USER=${DATABASE_USER}
      - MARIADB_PASSWORD=${DATABASE_PASS}
    ports:
      - "3306:3306"
    
  back-op-dev:
    container_name: back-op-dev
    build:
      context: ./psifos-backend-op
      dockerfile: Dockerfile.dev
    volumes:
      - ./psifos-backend-op:/app
    environment:
      - USE_ASYNC_ENGINE=${USE_ASYNC_ENGINE}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - TYPE_AUTH=${TYPE_AUTH}
      - APP_FRONTEND_URL=${APP_FRONTEND_URL}
      - APP_BACKEND_OP_URL=${APP_BACKEND_OP_URL}
      - APP_BACKEND_INFO_URL=${APP_BACKEND_INFO_URL}
      - CAS_URL=${CAS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - OAUTH_TOKEN_URL=${OAUTH_TOKEN_URL}
      - OAUTH_AUTHORIZE_URL=${OAUTH_AUTHORIZE_URL}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - OAUTH_USER_INFO_URL=${OAUTH_USER_INFO_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - TIMEZONE=${TIMEZONE}
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - mdb

  back-info-dev:
    container_name: back-info-dev
    build:
      context: ./psifos-backend-info
      dockerfile: Dockerfile.dev
    volumes:
      - ./psifos-backend-info:/app
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - USE_ASYNC_ENGINE=${USE_ASYNC_ENGINE}
      - SECRET_KEY=${SECRET_KEY}
      - TIMEZONE=${TIMEZONE}

    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - mdb

  redis:
    container_name: redis
    image: redis:7.0-alpine

  celery_worker:
    container_name: celery_worker
    build:
      context: ./psifos-backend-op
      dockerfile: ./app/celery_worker/Dockerfile.dev
    volumes:
      - ./psifos-backend-op:/app
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - MIXNET_01_NAME=${MIXNET_01_NAME}
      - MIXNET_01_URL=${MIXNET_01_URL}
      - MIXNET_02_NAME=${MIXNET_02_NAME}
      - MIXNET_02_URL=${MIXNET_02_URL}
      - MIXNET_03_NAME=${MIXNET_03_NAME}
      - MIXNET_03_URL=${MIXNET_03_URL}
      - MIXNET_TOKEN=${MIXNET_TOKEN}
      - MIXNET_WIDTH=${MIXNET_WIDTH}
      - MIXNET_WAIT_INTERVAL=${"MIXNET_WAIT_INTERVAL}
    depends_on:
      - back-op-dev
      - redis

  flower:
    container_name: flower
    build:
      context: ./psifos-backend-op
      dockerfile: ./app/celery_worker/Dockerfile.dev
    command: celery -A app.celery_worker.celery flower --port=5555
    volumes:
      - ./psifos-backend-op:/app
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - back-op-dev
      - redis
      - celery_worker


  vmn-01:
    container_name: mixserver01
    build:
      context: ./vmn-docker
      dockerfile: Dockerfile.dev
    environment:
      - SERVER_NAME=${MIXNET_01_NAME}
      - MIXNET_WIDTH=${MIXNET_WIDTH}
    ports:
      - "8002:8000"
      - "8040"
      - "4040"

  vmn-02:
    container_name: mixserver02
    build:
      context: ./vmn-docker
      dockerfile: Dockerfile.dev
    environment:
      - SERVER_NAME=${MIXNET_02_NAME}
      - MIXNET_WIDTH=${MIXNET_WIDTH}
    ports:
      - "8003:8000"
      - "8040"
      - "4040"

  vmn-03:
    container_name: mixserver03
    build:
      context: ./vmn-docker
      dockerfile: Dockerfile.dev
    environment:
      - SERVER_NAME=${MIXNET_03_NAME}
      - MIXNET_WIDTH=${MIXNET_WIDTH}
    ports:
      - "8004:8000"
      - "8040"
      - "4040"
